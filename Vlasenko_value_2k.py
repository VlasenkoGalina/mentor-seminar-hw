# -*- coding: utf-8 -*-
"""слася_2к.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/18z4SbZezZph81GQui6TSl9cNRJH7OwdI
"""

import pandas as pd
import numpy as np
import json
import matplotlib.pyplot as plt
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LinearRegression, LogisticRegression
from sklearn.metrics import mean_absolute_error, f1_score
from sklearn.impute import SimpleImputer
from sklearn.preprocessing import StandardScaler

!pip install pmdarima

import pmdarima as pm
from statsmodels.tsa.arima.model import ARIMA
import warnings
# from google.colab import drive
# drive.mount('/content/drive')

warnings.filterwarnings("ignore")

df = pd.read_excel('/content/drive/MyDrive/слася/Данные v2.xlsx')

df['дата'] = pd.to_datetime(df['дата'], format='%d.%m.%Y')
df = df[['дата', 'выход']]
df = df.sort_values(by='дата')
df.set_index('дата', inplace=True)
y = df['выход']

# plt.figure(figsize=(15,5))
# plt.plot(df.index,df['выход'])
# plt.ylabel('дата')
# plt.title('Хуета');

train_size = int(len(df) * 0.9)
y_train = y[:train_size]
y_test = y[train_size:]



model = ARIMA(df, order=(7, 2, 7))
model_fit = model.fit()

forecast = model_fit.forecast(steps=75)
mae_test = mean_absolute_error(y_test, forecast)
#print(f'MAE на тестовых данных: {mae_test:.4f}')

new = model_fit.forecast(steps=115)

pred = new[-40:].tolist()

# data_pred = pd.read_excel('/content/drive/MyDrive/слася/Данные v1.xlsx')
# #print(data_pred)
# #data_pred['дата'] = data_pred.to_datetime(data_pred['дата'], format='%d.%m.%Y')

# data_pred['выход'] = pred
# data_pred = data_pred[['дата', 'выход']]
# data_pred = data_pred.sort_values(by='дата')
# data_pred.set_index('дата', inplace=True)
with open('forecast_value.json', 'w') as file:
    json.dump(pred, file)

# Визуализация
# plt.figure(figsize=(10, 5))
# plt.plot(df, label='Исходные данные')
# plt.plot(data_pred, label='Предсказание', color='red')
# plt.title('Предсказание временных рядов с auto_arima')
# plt.xlabel('Дата')
# plt.ylabel('Выход')
# plt.legend()
# plt.show()

